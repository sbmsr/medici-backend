/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Medici, MediciInterface } from "../Medici";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "paymentSuccessful",
    type: "event",
  },
  {
    inputs: [],
    name: "attemptPurchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "blockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "p",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c75806100206000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b146100e3578063a035b1fe1461010e578063f2fde38b14610139578063fe4b84df146101625761007b565b806357e871e71461008057806358472e86146100ab578063715018a6146100b557806383197ef0146100cc575b600080fd5b34801561008c57600080fd5b5061009561018b565b6040516100a29190610ab9565b60405180910390f35b6100b3610191565b005b3480156100c157600080fd5b506100ca610213565b005b3480156100d857600080fd5b506100e161029b565b005b3480156100ef57600080fd5b506100f8610367565b6040516101059190610a1e565b60405180910390f35b34801561011a57600080fd5b50610123610391565b6040516101309190610ab9565b60405180910390f35b34801561014557600080fd5b50610160600480360381019061015b9190610922565b610397565b005b34801561016e57600080fd5b506101896004803603810190610184919061094b565b61048f565b005b60655481565b662386f26fc1000034146101da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d190610a59565b60405180910390fd5b7f6c6d4f262f647d12caf88e062871f219aca901c16285f892a75f8b92f64ab291336040516102099190610a1e565b60405180910390a1565b61021b61057f565b73ffffffffffffffffffffffffffffffffffffffff16610239610367565b73ffffffffffffffffffffffffffffffffffffffff161461028f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028690610a99565b60405180910390fd5b6102996000610587565b565b6102a361057f565b73ffffffffffffffffffffffffffffffffffffffff166102c1610367565b73ffffffffffffffffffffffffffffffffffffffff1614610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030e90610a99565b60405180910390fd5b61031f610367565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610364573d6000803e3d6000fd5b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60665481565b61039f61057f565b73ffffffffffffffffffffffffffffffffffffffff166103bd610367565b73ffffffffffffffffffffffffffffffffffffffff1614610413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040a90610a99565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047a90610a39565b60405180910390fd5b61048c81610587565b50565b600060019054906101000a900460ff16806104b5575060008054906101000a900460ff16155b6104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb90610a79565b60405180910390fd5b60008060019054906101000a900460ff161590508015610544576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61054c61064d565b4360658190555081606681905550801561057b5760008060016101000a81548160ff0219169083151502179055505b5050565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff1680610673575060008054906101000a900460ff16155b6106b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a990610a79565b60405180910390fd5b60008060019054906101000a900460ff161590508015610702576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61070a610736565b61071261080f565b80156107335760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061075c575060008054906101000a900460ff16155b61079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290610a79565b60405180910390fd5b60008060019054906101000a900460ff1615905080156107eb576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b801561080c5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610835575060008054906101000a900460ff16155b610874576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086b90610a79565b60405180910390fd5b60008060019054906101000a900460ff1615905080156108c4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6108d46108cf61057f565b610587565b80156108f55760008060016101000a81548160ff0219169083151502179055505b50565b60008135905061090781610c11565b92915050565b60008135905061091c81610c28565b92915050565b60006020828403121561093457600080fd5b6000610942848285016108f8565b91505092915050565b60006020828403121561095d57600080fd5b600061096b8482850161090d565b91505092915050565b61097d81610ae5565b82525050565b6000610990602683610ad4565b915061099b82610b21565b604082019050919050565b60006109b3601883610ad4565b91506109be82610b70565b602082019050919050565b60006109d6602e83610ad4565b91506109e182610b99565b604082019050919050565b60006109f9602083610ad4565b9150610a0482610be8565b602082019050919050565b610a1881610b17565b82525050565b6000602082019050610a336000830184610974565b92915050565b60006020820190508181036000830152610a5281610983565b9050919050565b60006020820190508181036000830152610a72816109a6565b9050919050565b60006020820190508181036000830152610a92816109c9565b9050919050565b60006020820190508181036000830152610ab2816109ec565b9050919050565b6000602082019050610ace6000830184610a0f565b92915050565b600082825260208201905092915050565b6000610af082610af7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e636f7272656374207061796d656e7420616d6f756e740000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610c1a81610ae5565b8114610c2557600080fd5b50565b610c3181610b17565b8114610c3c57600080fd5b5056fea2646970667358221220ef5ac236b45fffb05d659d1764014d1da1398b531f44e680e2772250eabd4a0364736f6c63430008040033";

export class Medici__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Medici> {
    return super.deploy(overrides || {}) as Promise<Medici>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Medici {
    return super.attach(address) as Medici;
  }
  connect(signer: Signer): Medici__factory {
    return super.connect(signer) as Medici__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MediciInterface {
    return new utils.Interface(_abi) as MediciInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Medici {
    return new Contract(address, _abi, signerOrProvider) as Medici;
  }
}
